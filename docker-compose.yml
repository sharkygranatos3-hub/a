version: '3.8'
services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: fivem
      POSTGRES_PASSWORD: fivem_pass
      POSTGRES_DB: fivem_db
    volumes:
      - db-data:/var/lib/postgresql/data

  minio:
    image: minio/minio:latest
    command: server /data --compat
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data

  traefik:
    image: traefik:v2.10
    command:
      - --api.insecure=true
      - --providers.docker=true
      - --entryPoints.web.address=:80
      - --entryPoints.websecure.address=:443
      - --certificatesResolvers.le.acme.httpChallenge.entryPoint=web
      - --certificatesResolvers.le.acme.email=your-email@example.com
      - --certificatesResolvers.le.acme.storage=/letsencrypt/acme.json
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt:/letsencrypt

  server:
    build: ./server
    env_file: .env.example
    depends_on:
      - db
      - minio
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server.rule=Host(`up.localtest.me`)"
      - "traefik.http.routers.server.entrypoints=web"
      - "traefik.http.services.server.loadbalancer.server.port=4000"
    volumes:
      - ./server/uploads:/app/uploads
    restart: unless-stopped

  client:
    build: ./client
    env_file: .env.example
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`up.localtest.me`)"
      - "traefik.http.routers.client.entrypoints=web"
      - "traefik.http.services.client.loadbalancer.server.port=80"
    restart: unless-stopped

volumes:
  db-data:
  minio-data:
  traefik-letsencrypt:
